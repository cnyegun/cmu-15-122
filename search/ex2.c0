void doubling(int[] A, int[] B, int n)
//@requires 0 <= n && n <= (int_max() / 2);
//@requires \length(A) == n && \length(B) == 2*n;
{
    for (int i = 0; i < n; i++)
    //@loop_invariant 0 <= i && i <= n;
    {
        B[2*i] = A[i];
        B[2*i + 1] = A[i];
    }
}

/*

1. It will always satisfies because if it overflown it will still satisfies. I'll simplify it by put 

*/
